# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oTree \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-19 16:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/forms.rst:4
msgid "Forms"
msgstr "フォーム"

#: ../../source/forms.rst:6
msgid ""
"Each page in oTree can contain a form, which the player should fill out "
"and submit by clicking the \"Next\" button. To create a form, first you "
"need fields on the player model, for example:"
msgstr ""
"oTreeの各ページはフォームを持ち、プレイヤーはフォームに入力し、 \"Next\" "
"ボタンを押すことでフォームに入力したデータを送信できます。フォームを作成するためにまず、Playerクラスにフィールドを作成する必要があります。例えば、"

#: ../../source/forms.rst:16
msgid "Then, in your Page class, set ``form_model`` and ``form_fields``:"
msgstr "次に、Pageクラスで ``form_model`` と ``form_fields`` を設定します。"

#: ../../source/forms.rst:24
msgid ""
"When the user submits the form, the submitted data is automatically saved"
" to the corresponding fields on the player model."
msgstr "ユーザがフォームデータを送信したとき、送信されたデータは、Playerクラス内の対応するフィールドに自動的に保存されます。"

#: ../../source/forms.rst:30
msgid "Forms in templates"
msgstr "テンプレート中のフォーム"

#: ../../source/forms.rst:32
msgid "In your template, you can display the form with:"
msgstr "テンプレートにおいて、次の形式でフォームを表示できます。"

#: ../../source/forms.rst:41
msgid "Simple form field validation"
msgstr "シンプルなフォームの検証"

#: ../../source/forms.rst:44
msgid "min and max"
msgstr "最大値、最小値"

#: ../../source/forms.rst:46
msgid "To require an integer to be between 12 and 24:"
msgstr "例：12から24までの整数が必要な時"

#: ../../source/forms.rst:52
msgid "If the max/min are not fixed, you should use :ref:`FOO_max`"
msgstr "フォームで設定される最大/最小値を動的に設定したい場合は、 :ref:`FOO_max` を使用する必要があります。"

#: ../../source/forms.rst:57
msgid "choices"
msgstr "選択肢"

#: ../../source/forms.rst:59
msgid ""
"If you want a field to be a dropdown menu with a list of choices, set "
"``choices=``:"
msgstr "フォームを選択肢付きのドロップダウンメニューにしたい場合は、 ``choices=`` を次のように設定します。"

#: ../../source/forms.rst:68
msgid ""
"To use radio buttons instead of a dropdown menu, you should set the "
"``widget`` to ``RadioSelect`` or ``RadioSelectHorizontal``:"
msgstr ""
"ダ六腑ダウンの代わりにラジオボタンを使いたい場合は、 ``widget`` に ``RadioSelect`` か "
"``RadioSelectHorizontal`` を設定して下さい。："

#: ../../source/forms.rst:78
msgid ""
"If the list of choices needs to be determined dynamically, use "
":ref:`FOO_choices`"
msgstr "選択肢を動的に設定したい場合は、 :ref:`FOO_choices` を使う必要があります。"

#: ../../source/forms.rst:80
msgid ""
"You can also set display names for each choice by making a list of "
"[value, display] pairs:"
msgstr "[value, display]のペアをリストに設定することで、選択肢に対応する表示名を設定することができます。："

#: ../../source/forms.rst:93
msgid ""
"If you do this, users will just see a menu with \"Low\", \"Medium\", "
"\"High\", but their responses will be recorded as 1, 2, or 3."
msgstr ""
"上記のコードを記述した場合、 \"Low\" , \"Medium\\ , \"High\" "
"と共にメニューが表示されます。ただし、1,2,3として選択は保存されます。"

#: ../../source/forms.rst:96
msgid "You can do this for ``BooleanField``, ``StringField``, etc.:"
msgstr "``BooleanField`` や ``StringField`` 等を使いたい場合は、下記のように記述します。："

#: ../../source/forms.rst:107
msgid ""
"You can get the human-readable label corresponding to the user's choice "
"like this:"
msgstr "次のようにすることで、人間にとって読みやすい形でユーザの選択を取得することができます。"

#: ../../source/forms.rst:116
msgid "``field_display`` is new in oTree 5.4 (August 2021)."
msgstr "``field_display`` はoTree 5 (2021年3月) からの新機能です。"

#: ../../source/forms.rst:119
msgid "Optional fields"
msgstr "任意の入力フォーム"

#: ../../source/forms.rst:121
msgid "If a field is optional, you can use ``blank=True`` like this:"
msgstr "フォームへの入力が任意である場合、 ``blank=True`` を下記のように使います。："

#: ../../source/forms.rst:130
msgid "Dynamic form field validation"
msgstr "動的なフォームの検証"

#: ../../source/forms.rst:132
msgid ""
"The ``min``, ``max``, and ``choices`` described above are only for fixed "
"(constant) values."
msgstr "``min``　、 ``max`` 、 ``choices`` は固定値限定です。"

#: ../../source/forms.rst:135
msgid ""
"If you want them to be determined dynamically (e.g. different from player"
" to player), then you can instead define one of the below functions."
msgstr "動的に検証したい場合（例えば、プレイヤーごとに入力できる値の範囲が異なる）は、代わりに下記の関数を定義してください。"

#: ../../source/forms.rst:142
msgid "{field_name}_choices()"
msgstr "{field_name}_choices()"

#: ../../source/forms.rst:144
msgid ""
"Like setting ``choices=``, this will set the choices for the form field "
"(e.g. the dropdown menu or radio buttons)."
msgstr "``choices=`` で設定することで、フォームの選択肢を設定できます。"

#: ../../source/forms.rst:148
msgid "Example:"
msgstr "例："

#: ../../source/forms.rst:165
msgid "{field_name}_max()"
msgstr "{field_name}_max()"

#: ../../source/forms.rst:167
msgid ""
"The dynamic alternative to setting ``max=`` in the model field. For "
"example:"
msgstr "``max=`` を動的に設定したい場合の手段として用いることができます。例："

#: ../../source/forms.rst:180
msgid "{field_name}_min()"
msgstr "{field_name}_min()"

#: ../../source/forms.rst:182
msgid "The dynamic alternative to setting ``min=`` on the model field."
msgstr "``min=`` を動的に設定したい場合の手段として用いることができます。"

#: ../../source/forms.rst:187
msgid "{field_name}_error_message()"
msgstr "{field_name}_error_message()"

#: ../../source/forms.rst:189
msgid "This is the most flexible method for validating a field."
msgstr "これは最も柔軟にフォームの検証ができる方法です。"

#: ../../source/forms.rst:206
msgid "Validating multiple fields together"
msgstr "複数フォームの検証"

#: ../../source/forms.rst:208
msgid ""
"Let's say your form has 3 number fields whose values must sum to 100. You"
" can enforce this with the ``error_message`` function, which goes on the "
"page:"
msgstr ""
"3つの数値を入力するフォームがあり、その値の合計が100にならなければならないとします。その場合、ページクラスに "
"``error_message`` 関数を下記のように設定することで検証できます。"

#: ../../source/forms.rst:224
msgid "Notes:"
msgstr "注意"

#: ../../source/forms.rst:226
msgid ""
"If a field was left blank (and you set ``blank=True``), its value here "
"will be ``None``."
msgstr "フォームが空欄でもよい場合（``blank=True`` に設定した場合）、値は ``None`` となります。"

#: ../../source/forms.rst:227
msgid "This function is only executed if there are no other errors in the form."
msgstr "この関数はフォームに他のエラーがない場合にのみ実行されます。"

#: ../../source/forms.rst:228
msgid ""
"You can also return a dict that maps field names to error messages. This "
"way, you don't need to write many repetitive FIELD_error_message methods "
"(see :ref:`here <duplicate_validation_methods>`)."
msgstr ""
"エラーメッセージにフィールドをマップすることもでき、FIELD_error_message methods メソッドを :ref:`このように "
"<duplicate_validation_methods>` 繰り返す必要がありません。"

#: ../../source/forms.rst:235
msgid "Determining form fields dynamically"
msgstr "動的なフォームフィールドの決定"

#: ../../source/forms.rst:237
msgid ""
"If you need the list of form fields to be dynamic, instead of "
"``form_fields`` you can define a function ``get_form_fields``:"
msgstr ""
"動的なフォームフィールドのリストが必要な時、 ``form_fields`` の代わりに ``get_form_fields`` "
"関数を定義できます。"

#: ../../source/forms.rst:251
msgid "Widgets"
msgstr "Widgets"

#: ../../source/forms.rst:253
msgid ""
"You can set a model field's ``widget`` to ``RadioSelect`` or "
"``RadioSelectHorizontal`` if you want choices to be displayed with radio "
"buttons, instead of a dropdown menu."
msgstr ""
"ドロップダウンメニューの代わりに、ラジオボタンを使いたい場合は、modelの ``widget`` を ``RadioSelect`` または "
"``RadioSelectHorizontal`` に設定して下さい。"

#: ../../source/forms.rst:258
msgid "{{ formfield }}"
msgstr "{{ formfield }}"

#: ../../source/forms.rst:260
msgid ""
"If you want to position the fields individually, instead of ``{{ "
"formfields }}`` you can use ``{{ formfield }}``:"
msgstr ""
"フォームを個別に配置したい場合は、 ``{{ formfields }}`` の代わりに、 ``{{ formfield }}`` "
"を使うことができます。："

#: ../../source/forms.rst:268
msgid "You can also put the ``label`` in directly in the template:"
msgstr "テンプレート内で直接 ``label`` を配置することもできます。"

#: ../../source/forms.rst:274
#, python-format
msgid "The previous syntax of ``{% formfield player.bid %}`` is still supported."
msgstr "過去のバージョンでの構文 ``{% formfield player.bid %}`` は引き続きサポートされます。"

#: ../../source/forms.rst:279
msgid "Customizing a field's appearance"
msgstr "フォームの外観のカスタマイズ"

#: ../../source/forms.rst:281
msgid ""
"``{{ formfields }}`` and ``{{ formfield }}`` are easy to use because they"
" automatically output all necessary parts of a form field (the input, the"
" label, and any error messages), with Bootstrap styling."
msgstr ""
"自動的にフォームフィールドに必要なすべてのパーツ（入力、ラベル、エラーメッセージ）を出力できるので、 ``{{ formfields }}`` と"
" ``{{ formfield }}`` が使いやすいです。"

#: ../../source/forms.rst:285
msgid ""
"However, if you want more control over the appearance and layout, you can"
" use manual field rendering. Instead of ``{{ formfield 'my_field' }}``, "
"do ``{{ form.my_field }}``, to get just the input element. Just remember "
"to also include ``{{ formfield_errors 'my_field' }}``."
msgstr ""
"ただし、外観やレイアウトを変更したい場合、手動で設定したフォームのレンダリングを使用できます。``{{ formfield 'my_field' "
"}}`` の代わりに、 ``{{ form.my_field }}`` を実行することで、入力要素のみを取得することができます。また、 ``{{ "
"formfield_errors 'my_field' }}`` を含むことも忘れないでください。"

#: ../../source/forms.rst:291
msgid "Example: Radio buttons arranged like a slider"
msgstr ""

#: ../../source/forms.rst:315
msgid "Example: Radio buttons in tables and other custom layouts"
msgstr "例：表やそのほかのカスタムレイアウト中のラジオボタン"

#: ../../source/forms.rst:317
msgid "Let's say you have a set of ``IntegerField`` in your model:"
msgstr "model 内に ``IntegerField`` のセットがあるとする。"

#: ../../source/forms.rst:328
msgid ""
"And you'd like to present them as a likert scale, where each option is in"
" a separate column."
msgstr "各選択肢が別々の列にある、リッカート尺度としてそれらを提示します。"

#: ../../source/forms.rst:331
msgid ""
"(First, try to reduce the code duplication in your model by following the"
" instructions in :ref:`many-fields`.)"
msgstr "（まず、 :ref:`多くのフィールドの作成方法  <many-fields>` の手順に従い、model内のコードの重複を減らしてください。）"

#: ../../source/forms.rst:334
msgid ""
"Because the options must be in separate table cells, the ordinary "
"``RadioSelectHorizontal`` widget will not work here."
msgstr "選択肢は表のセルで区切られており、通常の ``RadioSelectHorizontal`` は機能しません。"

#: ../../source/forms.rst:337
msgid "Instead, you should simply loop over the choices in the field as follows:"
msgstr "代わりに、次のようにフィールドの選択肢をループさせてください。"

#: ../../source/forms.rst:348
msgid ""
"If you have many fields with the same number of choices, you can arrange "
"them in a table:"
msgstr "同数の選択肢を持つフィールドが多くある場合は、それらを表に配置できます。"

#: ../../source/forms.rst:367
msgid "Raw HTML widgets"
msgstr "独自のHTMLウィジェット"

#: ../../source/forms.rst:369
msgid ""
"If ``{{ formfields }}`` and :ref:`manual field rendering <manual-forms>` "
"don't give you the appearance you want, you can write your own widget in "
"raw HTML. However, you will lose the convenient features handled "
"automatically by oTree. For example, if the form has an error and the "
"page re-loads, all entries by the user may be wiped out."
msgstr ""
"``{{ formfields }}`` や :ref:`手動のフィールドレンダリング <manual-forms>` "
"を利用しても理想の外観にならないとき、HTMLの生コード上でウィジェットを記述できます。ただし、oTreeによって提供される便利な機能を利用することはできません。例えば、フォームにエラーが発生したり、ページがリロードされたときに、ユーザが入力した情報は消去されてしまう可能性があります。"

#: ../../source/forms.rst:376
msgid ""
"First, add an ``<input>`` element. For example, if your ``form_fields`` "
"includes ``my_field``, you can do ``<input name=\"my_field\" "
"type=\"checkbox\" />`` (some other common types are ``radio``, ``text``, "
"``number``, and ``range``)."
msgstr ""
"まず、 ``<input>`` を加えます。例えば、 ``form_fields`` が ``my_field`` を含むのであれば、 "
"``<input name=\"my_field\" type=\"checkbox\" />`` を実行することができます。（他にも、 "
"``radio`` 、 ``text`` 、 ``number`` 、 ``range`` がああります。）"

#: ../../source/forms.rst:381
msgid ""
"Second, you should usually include ``{{ formfield_errors 'xyz' }}``, so "
"that if the participant submits an incorrect or missing value), they can "
"see the error message."
msgstr ""
"次に、参加者が誤った値を入力してしまった場合に、エラーメッセージが表示されるように、 ``{{ formfield_errors 'xyz' "
"}}`` を含める必要があります。"

#: ../../source/forms.rst:387
msgid "Raw HTML example: custom user interface with JavaScript"
msgstr "HTMLコードの例：JavaScriptを用いたカスタムユーザインタフェース"

#: ../../source/forms.rst:389
msgid ""
"Let's say you don't want users to fill out form fields, but instead "
"interact with some sort of visual app, like a clicking on a chart or "
"playing a graphical game. Or, you want to record extra data like how long"
" they spent on part of the page, how many times they clicked, etc."
msgstr "ユーザがフォームフィールに入力するのではなく、チャートのクリックやグラフィカルなゲームの操作等、ある種のビジュアルアプリを操作するとします。または、ページの一部に費やした時間やクリックした回数等、データを追加で記録したいとします。"

#: ../../source/forms.rst:394
msgid ""
"First, build your interface using HTML and JavaScript. Then use "
"JavaScript to write the results into a hidden form field. For example:"
msgstr "まず、HTMLやJavaScriptを利用するインタフェースを構成してください。次に、JavaScriptを利用して非表示のフォームに結果を書き出します。例："

#: ../../source/forms.rst:412
msgid ""
"When the page is submitted, the value of your hidden input will be "
"recorded in oTree like any other form field."
msgstr "ページが送信されると、非表示のフォームに書き出された値が、ほかのフォームのようにoTreeに記録されます。"

#: ../../source/forms.rst:415
msgid ""
"If this isn't working, open your browser's JavaScript console, see if "
"there are any errors, and use ``console.log()`` (JavaScript's equivalent "
"of ``print()``) to trace the execution of your code line by line."
msgstr ""
"これが機能しない場合は、利用しているブラウザのJavaScriptコンソールを開き、エラーが出ていないか確認してください。そして、 "
"``console.log()`` （ ``print()`` に相当する命令）を利用して、コードの実行をトレースすることをおすすめします。"

#: ../../source/forms.rst:420
msgid "Buttons"
msgstr "ボタン"

#: ../../source/forms.rst:423
msgid "Button that submits the form"
msgstr "フォームを送信するボタン"

#: ../../source/forms.rst:425
msgid ""
"If your page only contains 1 decision, you could omit the ``{{ "
"next_button }}`` and instead have the user click on one of several "
"buttons to go to the next page."
msgstr "``{{ next_button }}`` を省略し、代わりにいくつかのボタンの一つをクリックして、次のページへ遷移させることができます。"

#: ../../source/forms.rst:430
msgid ""
"For example, let's say your Player model has ``offer_accepted = "
"models.BooleanField()``, and rather than a radio button you'd like to "
"present it as a button like this:"
msgstr ""
"例えば、Playerクラスが ``offer_accepted = models.BooleanField()`` "
"を持っており、ラジオボタンではなく、下記のようなボタンを表示したいとします。"

#: ../../source/forms.rst:436
msgid ""
"First, put ``offer_accepted`` in your Page's ``form_fields`` as usual. "
"Then put this code in the template:"
msgstr ""
"まず、ページの  ``form_fields`` に ``offer_accepted`` "
"を設定して下さい。次に、テンプレートにこのコードを記入してください。"

#: ../../source/forms.rst:445
msgid ""
"You can use this technique for any type of field, not just "
"``BooleanField``."
msgstr "この手法は ``BooleanField`` だけでなく、任意のタイプのフィールドに利用できます。"

#: ../../source/forms.rst:449
msgid "Button that doesn't submit the form"
msgstr "フォームの送信以外の目的で利用するボタン"

#: ../../source/forms.rst:451
msgid ""
"If the button has some purpose other than submitting the form, add "
"``type=\"button\"``:"
msgstr "フォームの送信以外の目的があるとき、 ``type=\"button\"`` を追加します。"

#: ../../source/forms.rst:466
msgid "Miscellaneous & advanced"
msgstr "その他、高度な設定"

#: ../../source/forms.rst:471
msgid "JavaScript access to form inputs"
msgstr ""

#: ../../source/forms.rst:475
msgid "New in oTree 5.6 (December 2021)"
msgstr ""

#: ../../source/forms.rst:477
msgid ""
"In your JavaScript code you can use ``formInputs.xyz`` to access the "
"``<input>`` element of form field ``xyz``. For example, you can do:"
msgstr ""

#: ../../source/forms.rst:498
msgid "Form fields with dynamic labels"
msgstr "動的ラベル付きフォームフィールド"

#: ../../source/forms.rst:500
msgid ""
"If the label should contain a variable, you can construct the string in "
"your page:"
msgstr "\"ラベルに変数が含まれる場合、ページに文字列を作成できます"

#: ../../source/forms.rst:514
msgid "Then, in the template:"
msgstr "次に、テンプレートで："

#: ../../source/forms.rst:520
msgid ""
"If you use this technique, you may also want to use "
":ref:`dynamic_validation`."
msgstr "この手法を利用する場合は、 :ref:`dynamic_validation` の利用もおすすめします。"

