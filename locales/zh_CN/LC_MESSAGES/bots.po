# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version:  oTree\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-20 21:57-0400\n"
"PO-Revision-Date: 2021-06-02 10:21+0800\n"
"Last-Translator: matrixlt <wangmatrixlt@gmail.com>\n"
"Language: zh_CN\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/bots.rst:4
msgid "Bots"
msgstr "机器人"

#: ../../source/bots.rst:6
msgid ""
"Bots simulate participants playing your app. They click through each "
"page, fill out forms, and make sure that everything works properly."
msgstr "机器人模拟参与人游玩你的应用。它们点击按钮，填写表单，确保一切运行正常。"

#: ../../source/bots.rst:9
msgid ""
"This feature is designed for lazy people who would prefer for oTree to "
"automatically test their apps for them. And oTree Studio can even design "
"your bot code for you, so the whole process (writing and running bots) "
"involves barely any effort."
msgstr ""
"这一特性是为那些希望oTree能够自动测试他们应用的懒人设计的。并且oTree "
"Studio甚至可以为你设计模拟代码，使得整个过程（编写和运行机器人程序）变得非常容易。"

#: ../../source/bots.rst:17
msgid "Running bots"
msgstr "运行bots"

#: ../../source/bots.rst:19
msgid "Add bots to your app (see instructions below)"
msgstr "将bots添加到你的应用中（参考下面的代码）"

#: ../../source/bots.rst:20
msgid "In your session config, set ``use_browser_bots=True``."
msgstr "在你的session config中，设置 ``use_browser_bots=True``。"

#: ../../source/bots.rst:21
msgid ""
"Run your server and create a session. The pages will auto-play with "
"browser bots, once the start links are opened."
msgstr "运行服务器并创建一个会话。一旦开始链接被打开，页面会使用浏览器bots自动进行。"

#: ../../source/bots.rst:23
msgid "If using Heroku, make sure the second dyno is enabled."
msgstr "如果你使用了Heroku，确保第二个dyno被启用。"

#: ../../source/bots.rst:26
msgid "Writing tests"
msgstr "编写测试"

#: ../../source/bots.rst:28
msgid ""
"In oTree Studio, go to the \"Tests\" section of your app. Click the "
"button to auto-write bots code. If you want to refine the code that was "
"generated (such as adding ``expect()`` statements), read the below "
"sections."
msgstr ""
"在oTree Studio中，前往你应用的“Test”部分。单击按钮以自动编写bots代码。如果你想要改进生成的代码（比如加入 "
"``expect()`` 语句），阅读下面的部分。"

#: ../../source/bots.rst:34
msgid ""
"If you are using a text editor, go to ``tests.py``. See examples of how "
"to define ``tests.py`` `here <https://github.com/oTree-org/otree>`__."
msgstr ""
"如果你使用的是文本编辑器，前往 ``tests.py``。参考 `这里 <https://github.com/oTree-"
"org/otree>`__ 的例子来了解如何定义 ``tests.py``。"

#: ../../source/bots.rst:38
msgid "Submitting pages"
msgstr "提交页面"

#: ../../source/bots.rst:40
msgid "You should make one ``yield`` per page submission. For example:"
msgstr "你应当对每一个页面子任务创建一个 ``yield`` ，例如："

#: ../../source/bots.rst:47
msgid ""
"Here, we first submit the ``Start`` page, which does not contain a form. "
"The following page has 2 form fields, so we submit a dict."
msgstr "这里，我们首先提交 ``Start`` 页面，它不包含任何表单。下一个页面有2个表单字段，故我们提交一个字典。"

#: ../../source/bots.rst:50
msgid ""
"The test system will raise an error if the bot submits invalid input for "
"a page, or if it submits pages in the wrong order."
msgstr "测试系统会抛出一个错误如果机器人提交了不正确的输入，或是按照错误的顺序提交了页面。"

#: ../../source/bots.rst:53
msgid "You use ``if`` statements to play any player or round number. For example:"
msgstr "你可以使用 ``if`` 语句来判断角色或者轮数。举例如下："

#: ../../source/bots.rst:65
msgid ""
"Your ``if`` statements can depend on ``self.player``, ``self.group``, "
"``self.round_number``, etc."
msgstr ""
"你的 ``if`` 语句可以依赖 "
"``self.player``，``self.group``，``self.round_number``，诸如此类。"

#: ../../source/bots.rst:68
msgid "Ignore wait pages when writing bots."
msgstr "编写bots时请忽略等待页面。"

#: ../../source/bots.rst:71
msgid "Rounds"
msgstr "轮次"

#: ../../source/bots.rst:73
msgid ""
"Your bot code should just play 1 round at a time. oTree will "
"automatically execute it ``NUM_ROUNDS`` times."
msgstr "你的bot代码应当每次仅模拟一轮。oTree会自动将其执行 ``NUM_ROUNDS`` 次。"

#: ../../source/bots.rst:79
msgid "expect()"
msgstr "expect()"

#: ../../source/bots.rst:81
msgid ""
"You can use ``expect`` statements to ensure that your code is working as "
"you expect."
msgstr "你可以使用 ``expect`` 语句来确保你的代码如你期望地那样工作。"

#: ../../source/bots.rst:83
msgid "For example:"
msgstr "例如："

#: ../../source/bots.rst:92
msgid ""
"If ``self.player.num_apples`` is not 99, then you will be alerted with an"
" error."
msgstr "如果 ``self.player.num_apples`` 不是99，那么你就会被提示有一个错误。"

#: ../../source/bots.rst:94
msgid ""
"You can also use expect with 3 arguments, like "
"``expect(self.player.budget, '<', 100)``. This will verify that "
"``self.player.budget`` is less than 100. You can use the following "
"operators: ``'<'``, ``'<='``, ``'=='``, ``'>='``, ``'>'``, ``'!='``, "
"``'in'``, ``'not in'``."
msgstr ""
"你也可以在expect中使用3个参数，如 ``expect(self.player.budget, '<', 100)``。这会验证 "
"``self.player.budget`` 比100小。你可以使用下面的这些运算符: "
"``'<'``，``'<='``，``'=='``，``'>='``，``'>'``，``'!='``，``'in'``，``'not "
"in'``。"

#: ../../source/bots.rst:107
msgid "Testing form validation"
msgstr "测试表单验证"

#: ../../source/bots.rst:109
msgid ""
"If you use :ref:`form validation <form-validation>`, you should test that"
" your app is correctly rejecting invalid input from the user, by using "
"``SubmissionMustFail()``."
msgstr ""
"如果你使用了 :ref:`form validation <form-"
"validation>`，你应当测试你的应用是否正确地防止了来自用户的错误输入，测试可通过 ``SubmissionMustFail()`` "
"进行。"

#: ../../source/bots.rst:113
msgid "For example, let's say you have this page:"
msgstr "例如你的页面如下："

#: ../../source/bots.rst:127
msgid "Here is how to test that it is working properly:"
msgstr "下面的代码测试了它是否正常工作："

#: ../../source/bots.rst:134
msgid ""
"The bot will submit ``MyPage`` twice. If the first submission "
"**succeeds**, an error will be raised, because it is not supposed to "
"succeed."
msgstr "Bot会提交 ``MyPage`` 两次。如果第一次提交 **成功**，那么一个错误会被抛出，因为这本不应该成功。"

#: ../../source/bots.rst:139
msgid "Checking the HTML"
msgstr "检查HTML"

#: ../../source/bots.rst:141
msgid ""
"``self.html`` contains the HTML of the page you are about to submit. You "
"can use this together with ``expect()``:"
msgstr "``self.html`` 包含了你所要提交页面的HTML。你可以将其与 ``expect()`` 一起使用："

#: ../../source/bots.rst:156
msgid ""
"``self.html`` is updated with the next page's HTML, after every ``yield``"
" statement. Linebreaks and extra spaces are ignored."
msgstr "``self.html`` 在每一个 ``yield`` 语句之后被更新为下一个页面的HTML。换行符与多余的空格会被忽略。"

#: ../../source/bots.rst:160
msgid "Automatic HTML checks"
msgstr "自动HTML检查"

#: ../../source/bots.rst:162
msgid ""
"An error will be raised if the bot is trying to submit form fields that "
"are not actually found in the page's HTML, or if the page's HTML is "
"missing a submit button."
msgstr "如果bot试图提交一个在页面HTML实际上不存在的表单或者页面HTML缺少了提交按钮，一个错误会被抛出。"

#: ../../source/bots.rst:165
msgid ""
"However, the bot system is not able to see fields and buttons that are "
"added dynamically with JavaScript. In these cases, you should disable the"
" HTML check by using ``Submission`` with ``check_html=False``. For "
"example, change this:"
msgstr ""
"然而，bot系统并不能识别被JavaScript动态添加的字段和按钮。在这种情况下，你应当禁用HTML检查，即设置 "
"``check_html=False``。例如，修改下面的代码："

#: ../../source/bots.rst:173
msgid "to this:"
msgstr "为："

#: ../../source/bots.rst:179
msgid ""
"(If you used ``Submission`` without ``check_html=False``, the two code "
"samples would be equivalent.)"
msgstr "（如果你在 ``Submission`` 中不设置 ``check_html=False``，那么两段代码是等价的。）"

#: ../../source/bots.rst:185
msgid "Simulate a page timeout"
msgstr "模拟页面超时"

#: ../../source/bots.rst:187
msgid "You can use ``Submission`` with ``timeout_happened=True``:"
msgstr "你可以在 ``Submission`` 中设置 ``timeout_happened=True``:"

#: ../../source/bots.rst:194
msgid "Advanced features"
msgstr "高级特性"

#: ../../source/bots.rst:196
msgid "See :ref:`bots_advanced`"
msgstr "参见 :ref:`bots_advanced`"
